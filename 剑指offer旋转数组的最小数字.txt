把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。
输入一个非递减排序的数组的一个旋转，输出旋转数组的最小元素。
例如数组{3,4,5,1,2}为{1,2,3,4,5}的一个旋转，该数组的最小值为1。
NOTE：给出的所有元素都大于0，若数组大小为0，请返回0。
class Solution {
public:
    int minNumberInRotateArray(vector<int> rotateArray) {
        if(rotateArray.size() == 0)
            return 0;
        int index1 = 0,index2 = rotateArray.size()-1;
        int indexmid = index1;//如果把排序数组的前面的0个元素搬到最后面，即排序数组本身，这仍然是一个数组的旋转，即第一个数就是旋转数组的最小元素
        while(rotateArray[index1] >= rotateArray[index2])
        {
            if(index2 - index1 == 1)
            {
                indexmid = index2;
                break;
            }
            indexmid = (index1 + index2)/2;
            if(rotateArray[indexmid] >= rotateArray[index1])//更小的数还在后面，需要把index1往后挪
            {
                index1 = indexmid;
            }
            else if(rotateArray[indexmid] <= rotateArray[index2])//更小的数还在前面，需要把index2往前挪
            {
                index2 = indexmid;
            }
        }
        return rotateArray[indexmid];
    }
};