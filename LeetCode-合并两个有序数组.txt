题目描述：

给定两个有序整数数组 nums1 和 nums2，将 nums2 合并到 nums1 中，使得 num1 成为一个有序数组。

说明:

初始化 nums1 和 nums2 的元素数量分别为 m 和 n。
你可以假设 nums1 有足够的空间（空间大小大于或等于 m + n）来保存 nums2 中的元素。
示例:

输入:
nums1 = [1,2,3,0,0,0], m = 3
nums2 = [2,5,6],       n = 3

输出: [1,2,2,3,5,6]

class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
       int i,j,k;
       //将数组num1向后移动n位
       for(i = m-1;i >= 0; i--)
       {
           nums1[i+n] = nums1[i];
       }
       //将数组num2从第一位开始的数值与数组num2的第i位开始的数值进行比较，二者中的较小值放最前面，依次循环比较。
       for(i = n,j = 0,k = 0;i < m+n && j < n;)
       {
           if(nums1[i] <= nums2[j])
           {
               nums1[k++] = nums1[i++];
           }
           else
           {
               nums1[k++] = nums2[j++];
           }
       }
        while(j < n)
       {
           nums1[k++] = nums2[j++];
       }
    }
};
