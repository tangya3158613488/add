题目描述
输入一颗二叉树的根节点和一个整数，打印出二叉树中结点值的和为输入整数的所有路径。路径定义为从树的根结点开始往下一直到叶结点所经过的结点形成一条路径。
/*
struct TreeNode {
	int val;
	struct TreeNode *left;
	struct TreeNode *right;
	TreeNode(int x) :
			val(x), left(NULL), right(NULL) {
	}
};*/
class Solution {
public:
    vector<vector<int>> ret;
    vector<int> path;
    void Find(TreeNode* root,int sum)
    {
        if(root == nullptr)
            return;
        path.push_back(root->val);
        if(sum == root->val && root->left == nullptr && root->right == nullptr)
        {
            ret.push_back(path);
        }
        if(root->left)
            Find(root->left,sum - root->val);
        if(root->right)
            Find(root->right,sum - root->val);
        path.pop_back();
    }
    vector<vector<int>> FindPath(TreeNode* root,int expectNumber) {
        Find(root,expectNumber);
        return ret;
    }
};