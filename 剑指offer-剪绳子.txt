题目描述
给你一根长度为n的绳子，请把绳子剪成整数长的m段（m、n都是整数，n>1并且m>1），每段绳子的长度记为k[0],k[1],...,k[m]。请问k[0]xk[1]x...xk[m]可能的最大乘积是多少？例如，当绳子的长度是8时，我们把它剪成长度分别为2、3、3的三段，此时得到的最大乘积是18。
输入描述:
输入一个数n，意义见题面。（2 <= n <= 60）
输出描述:
输出答案。
示例1
输入
复制
8
输出
复制
18

1.贪婪算法
class Solution {
public:
    int cutRope(int number) {
        int max=1;
        if(number <= 3 && number > 0)
        {
            return number - 1;
        }
        while(number > 4)
        {
            number -= 3;
            max *= 3;
        }
        return max * number;
    }
};
2.动态规划
class Solution {
public:
    int cutRope(int number) {
        if(number <= 3)
        {
            return number - 1;
        }
        vector<int> dp(number + 1,0);
        dp[1] = 1;
        dp[2] = 2;
        dp[3] = 3;
        
        int max = 0;
        for(int i = 4; i <= number; i++)
        {
            for(int j = 1; j <= i / 2; j++)
            {
                int curmax = dp[j] * dp[i - j];
                if(max < curmax)
                    max = curmax;
                dp[i] = max;
            }
        }
        max = dp[number];
        return max;
    }
};